{"version":3,"sources":["hooks/useStats.js","components/Card.js","components/Cards.js","components/CountryPicker.js","images/image.png","components/CovidInfor.js","App.js","reportWebVitals.js","index.js"],"names":["useStats","url","useState","stats","setStats","loading","setLoading","error","setError","useEffect","a","console","log","fetch","then","res","json","catch","err","data","fetchData","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","toLocaleString","Date","toDateString","Cards","confirmed","recovered","deaths","URL_COUNTRIES","DEFAULT_COUNTRY","CountryPicker","handleCountryChange","selectedCountry","setSelectedCountry","countries","defaultValue","onChange","e","target","map","country","name","i","CovidInfor","setUrl","src","image","alt","urlCountry","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.609573bf.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    console.log('Mounting or updating');\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      console.log('Fetching Data');\n      const data = await fetch(url)\n        .then(res => res.json())\n        .catch(err => {\n          setError(err);\n        });\n      setStats(data);\n      setLoading(false);\n    }\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error,\n  };\n}\n\nexport default useStats;\n","import React from 'react';\nimport '../styles/Card.css';\n\nfunction CardComponent({ className, cardTitle, value, lastUpdate, cardSubtitle }) {\n  return (\n    <div className={`card-container ${className}`}>\n      <div className= \"title\">{cardTitle}</div>\n        <div className= \"value\">{value.toLocaleString()}</div>\n        <div className= \"date\">{new Date(lastUpdate).toDateString()}</div>\n        <div className= \"subTitle\">{cardSubtitle}</div>\n    </div>\n  );\n};\n\nexport default CardComponent;\n","import React from 'react';\nimport useStats from '../hooks/useStats';\nimport CardComponent from './Card';\nimport '../styles/Cards.css';\n\nfunction Cards({ url }) {\n  const { stats, loading, error } = useStats(url);\n  console.log(url, stats);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error...</p>;\n  return (\n    <div className=\"cards-container\">\n        <CardComponent\n          className=\"infected\"\n          cardTitle=\"Infected\"\n          value={stats.confirmed.value}\n          lastUpdate={stats.lastUpdate}\n          cardSubtitle=\"Number of active cases from COVID-19.\"\n        />\n        <CardComponent\n          className=\"recovered\"\n          cardTitle=\"Recovered\"\n          value={stats.recovered.value}\n          lastUpdate={stats.lastUpdate}\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\n        />\n        <CardComponent\n          className=\"deaths\"\n          cardTitle=\"Deaths\"\n          value={stats.deaths.value}\n          lastUpdate={stats.lastUpdate}\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\n        />\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useState } from 'react';\nimport useStats from '../hooks/useStats';\nimport '../styles/CountryPicker.css';\n\nconst URL_BASE = 'https://covid19.mathdro.id/api';\nconst URL_COUNTRIES = 'https://covid19.mathdro.id/api/countries';\nconst DEFAULT_COUNTRY = 'Global';\n\nfunction CountryPicker({ handleCountryChange }) {\n  const [selectedCountry, setSelectedCountry] = useState(DEFAULT_COUNTRY);\n  const { stats: countries, loading, error } = useStats(URL_COUNTRIES);\n\n  const handleChange = e => {\n    setSelectedCountry(e.target.value);\n    if (e.target.value != DEFAULT_COUNTRY) handleCountryChange(`${URL_COUNTRIES}/${e.target.value}`);\n    else handleCountryChange(URL_BASE);\n  }\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error...</p>;\n  return (\n\n    <div>\n    <h2 className=\"text-show\">Currently Showing: {selectedCountry}</h2>\n    <select className=\"formControl\" defaultValue=\"\" onChange={handleChange}>\n    <option value={DEFAULT_COUNTRY}>{DEFAULT_COUNTRY}</option>\n        {countries.countries.map((country) => country.name).map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </select>\n      </div>\n  );\n};\n\nexport default CountryPicker;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { useState } from 'react';\nimport Cards from './Cards';\nimport CountryPicker from './CountryPicker';\nimport '../styles/CovidInfor.css';\n\nimport image from '../images/image.png';\n\nconst URL_BASE = 'https://covid19.mathdro.id/api';\n\nfunction CovidInfor() {\n  const [url, setUrl] = useState(URL_BASE);\n  const handleCountryChange = urlCountry => {\n    setUrl(urlCountry);\n  }\n\n\n  return (\n    <div className=\"cf-container\">\n        <img className=\"\" src={image} alt=\"COVID-19\" />\n        <CountryPicker handleCountryChange={handleCountryChange} />\n        <Cards url={url} />\n      </div>\n  );\n}\n\nexport default CovidInfor;\n","import React from 'react'\n\n/* スタイルシート */\nimport './styles/main.css';\n\n/* コンポーネント */\nimport CovidInfor from './components/CovidInfor';\n\nfunction App() {\n  return (\n    <div className=\"container is-fluid\">\n      <CovidInfor />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}